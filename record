#!/bin/sh
#
# A script to record the screen using ffmpeg, with support for recording audio
# from both the screen and a microphone, to record a specific part of the screen
# selected using slop, and even running screenkey to show what keys you're
# pressing.
#
# fzfmenu is used to pick the sinks used for sound.
#
# Depends on: ffmpeg, slop, screenkey, pulseaudio, fzfmenu, xrandr

pidfile="${XDG_RUNTIME_DIR:-/dev/shm}/record-script.pid"
output="/dev/shm/screen-recording.mkv"

framerate=60    # framerate for capture
usemicrophone=0 # record the microphone input
usespeakers=0   # record sound coming from the computer
usescreenkey=0  # show keys being pressed on the screen
useslop=0       # select area or window that will be recorded

cmdline='ffmpeg -y'

if [ -e "$pidfile" ] && [ -d "/proc/$(cat "$pidfile")" ]; then
  kill -s INT "$(cat "$pidfile")" >/dev/null
  killall screenkey 2>/dev/null
  rm "$pidfile"
  notify-send -u low 'Recording stopped!' 'FFmpeg process has been killed.'
  exit 0
fi

while [ "$#" -gt 0 ]; do
  case "$1" in
    -s|--sound|--with-sound|--record-sound)
      usespeakers=1
      shift ;;
    -m|--microphone|--with-microphone|--record-microphone)
      usemicrophone=1
      shift ;;
    -l|--slop|--use-slop|--run-slop)
      useslop=1
      shift ;;
    -k|--screenkey|--with-screenkey|--run-screenkey)
      usescreenkey=1
      shift ;;
    -f|--framerate|--with-framerate|--target-framerate)
      framerate="$2"
      shift 2 ;;
    *)
      output="$1"
      shift ;;
  esac
done

cmdline="$cmdline -framerate $framerate -thread_queue_size 4096 -f x11grab"

if [ "$useslop" -eq 1 ]; then
  eval "$(slop -f 'X=%x Y=%y W=%w H=%h')"

  [ $((W % 2)) -ne 0 ] && W=$((W + 1)) # H.264 wants only even width and height
  [ $((H % 2)) -ne 0 ] && H=$((H + 1)) # and will not accept otherwise! :(

  cmdline="$cmdline -s ${W}x${H} -i $DISPLAY.0+$X,$Y"
else
  resolution="$(xrandr | grep -F '*' | awk '{print $1}' | sed 1q)"
  cmdline="$cmdline -s $resolution -i $DISPLAY.0"
fi

if [ "$usespeakers" -eq 1 ]; then
  pasrc="$(pactl list short sources | awk '{print $1 " " $2}' \
    | fzfmenu --prompt='Sound: ' | awk '{print $1}')"
  cmdline="$cmdline -thread_queue_size 4096 -f pulse -i $pasrc"
fi

if [ "$usemicrophone" -eq 1 ]; then
  pasrc="$(pactl list short sources | awk '{print $1 " " $2}' \
    | fzfmenu --prompt='Microphone: ' | awk '{print $1}')"
  cmdline="$cmdline -thread_queue_size 4096 -f pulse -i $pasrc"
fi

[ "$usespeakers" -eq 1 ] || [ "$usemicrophone" -eq 1 ] \
  && cmdline="$cmdline -c:a aac -b:a 128k"

[ "$usespeakers" -eq 1 ] && [ "$usemicrophone" -eq 1 ] \
  && cmdline="$cmdline -filter_complex amix"

cmdline="$cmdline -c:v libx264 -crf 0 -pix_fmt yuv420p -preset ultrafast"

if [ "$usescreenkey" -eq 1 ] && [ "$useslop" -eq 1 ]; then
  screenkey -t 2 -s small -g "${W}x${H}+${X}+${Y}" &
elif [ "$usescreenkey" -eq 1 ]; then
  screenkey -t 2 -s small &
fi

echo "$$" > "$pidfile"

notify-send -u low 'Recording started!' "Don't do anything suspicious!"

exec $cmdline "$output"
