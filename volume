#!/bin/bash
#
# Script to manipulate the volume for the currently active PulseAudio sink.
# Works with PipeWire through its PulseAudio compatibility layer. Perfect for
# keybinds. Makes use of pamixer for simplicity and notify-send for
# notifications.
#
# The notification is marked as transient and is replaced by the next one to
# avoid cluttering up notification damon history.
#
# This is what happens when someone refuses to use something like a Desktop
# Environment while maintaining DE-like features, such as editable notifications
# for volume changes.

declare -r NOTIFICATION_ID_FILE="/tmp/volume-notification-id"
declare notificationId

function get-image-path {
  local volume="$1" muted="$2"

  if [[ "$muted" = "true" ]]; then
    echo "audio-volume-muted"
    return
  fi

  case $(( volume / 33 )) in
    0) echo "audio-volume-low";;
    1) echo "audio-volume-medium";;
    2) echo "audio-volume-high";;
    *) echo "audio-volume-high";;
  esac
}

function read-notification-id {
  [[ -e "$NOTIFICATION_ID_FILE" ]] || echo "$RANDOM" > "$NOTIFICATION_ID_FILE"
  notificationId="$(< "$NOTIFICATION_ID_FILE")"
  echo "$notificationId"
}

function change-volume {
  local target=$(( $(pamixer --get-volume) + $1 )) increment=$1
  local volume=$(( target < 0 ? 0 : target > 100 ? 100 : target ))
  pamixer --set-volume "$volume"
}

function mute {
  pamixer -t
}

function notify-volume {
  local increment="$1" volume="$2"
  local title

  if [[ "$increment" -gt 0 ]]
    then title="Volume increased ($volume%)"
    else title="Volume decreased ($volume%)"
  fi

  notify-send "$title" \
    --app-name "Volume" -r "$notificationId" -p \
    --hint "int:has-percentage:$volume" \
    --hint "string:image-path:$(get-image-path "$volume")" \
    --hint "boolean:transient:true" > "$NOTIFICATION_ID_FILE"
}

function notify-mute {
  local volume muted title image

  volume="$(pamixer --get-volume)"
  muted="$(pamixer --get-mute)"
  image="$(get-image-path "$volume" "$muted")"

  if [[ "$muted" = "false" ]]
    then title="Unmuted"
    else title="Muted"
  fi

  notify-send "$title" \
    --app-name "Volume" -r "$notificationId" -p \
    --hint "boolean:transient:true" \
    --hint "string:image-path:$image" > "$NOTIFICATION_ID_FILE"
}

function main {
  read-notification-id
  case "$1" in
    -i|--increase|up)
      change-volume 5
      notify-volume 5 "$(pamixer --get-volume)"
      ;;
    -d|--decrease|down)
      change-volume -5
      notify-volume -5 "$(pamixer --get-volume)"
      ;;
    -m|--mute|toggle)
      mute
      notify-mute
      ;;
    *)
      echo "unrecognized option: $1, use one of -i, -d, -m"
      exit 1
      ;;
  esac
}

main "$@"
